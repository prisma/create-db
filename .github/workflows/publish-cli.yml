name: Preview & Publish all CLIs

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - closed
  push:
    branches:
      - main

env:
  # each folder under the repo root that contains one of your CLIs
  WORKSPACES: |
    create-db
    create-pg
    create-postgres

jobs:
  preview:
    if: github.event_name == 'pull_request'
    name: 🚧 Preview release (PR #${{ github.event.number }})
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🤐 Disable Husky
        run: echo "HUSKY=0" >> $GITHUB_ENV

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🔧 Install dependencies
        run: pnpm install

      - name: 🔄 Disable pnpm git-checks
        run: pnpm config set git-checks false

      - name: 🔑 Configure npm auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.CREATE_DB_TOKEN_NPM }}" > ~/.npmrc

      - name: 🚀 Publish PR-tagged previews
        run: |
          PRE_TAG="pr${{ github.event.number }}-${{ github.event.pull_request.head.ref }}-${{ github.run_id }}"
          for pkg in $WORKSPACES; do
            echo "› publishing $pkg@$PRE_TAG"
            cd $pkg
            npm version prerelease \
              --preid "$PRE_TAG" \
              --no-git-tag-version
            pnpm publish --access public --tag pr${{ github.event.number }}
            cd - >/dev/null
          done

      - name: 🧹 Cleanup npm auth
        run: rm -f ~/.npmrc

  publish:
    if: >
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true
    name: 🚀 Bump & publish real releases
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout full & tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: 🤐 Disable Husky
        run: echo "HUSKY=0" >> $GITHUB_ENV

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🔧 Install dependencies
        run: pnpm install

      - name: 🔄 Bump versions & generate changelogs
        run: pnpm changeset version

      - name: 💾 Commit & push version bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git commit -am "chore: version packages [skip ci]" || echo "no version changes"
          git push origin main --follow-tags

      - name: 🔑 Configure npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.CREATE_DB_TOKEN_NPM }}" > ~/.npmrc

      - name: 🚀 Publish all real releases
        run: |
          for pkg in $WORKSPACES; do
            echo "› publishing $pkg"
            cd $pkg
            pnpm publish --access public
            cd - >/dev/null
          done

      - name: 🧹 Cleanup npm auth
        run: rm -f ~/.npmrc
