name: Release CLIs

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  WORKSPACES: create-db create-pg create-postgres

jobs:
  release:
    name: 🚀 Release CLIs
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🤐 Disable Husky
        run: echo "HUSKY=0" >> $GITHUB_ENV

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🔧 Install dependencies
        run: pnpm install

      - name: ❌ Disable pnpm git-checks
        run: pnpm config set git-checks false

      - name: 📄 Copy README to child CLIs
        run: |
          for pkg in create-pg create-postgres; do
            cp create-db/README.md "$pkg/README.md"
          done

      - name: 🔑 Configure npm auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.CREATE_DB_TOKEN_NPM }}" > ~/.npmrc

      # Always publish the packages, regardless of changesets
      - name: 🚀 Publish Each CLI Package
        run: |
          export CREATE_DB_WORKER_URL="${{ secrets.CREATE_DB_WORKER_URL }}"
          export CLAIM_DB_WORKER_URL="${{ secrets.CLAIM_DB_WORKER_URL }}"

          echo "Using CREATE_DB_WORKER_URL=$CREATE_DB_WORKER_URL"
          echo "Using CLAIM_DB_WORKER_URL=$CLAIM_DB_WORKER_URL"

          for pkg in $WORKSPACES; do
            echo "Publishing $pkg to npm..."
            cd "$pkg"
            npm version patch --no-git-tag-version
            pnpm publish --access public || echo "Publish failed for $pkg"
            cd - >/dev/null
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CREATE_DB_TOKEN_NPM }}

      - name: 🧹 Cleanup npm auth
        run: rm -f ~/.npmrc

      # Finally, create a PR for version bump + changelogs
      - name: 📝 Prepare Changesets PR
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
